temp <- c(35,38.2,32.2,31.515)
RPM <- c(70,80,50,178.485)
testing_df <-data.frame(pH,temp,RPM)
maxs1<- apply(testing_df,2,max)
mins1<- apply(testing_df,2,min)
testing_df1 <- as.data.frame(scale(testing_df,center = mins1,scale = (maxs1-mins1)))
set.seed(4)
ann_model <- neuralnet(`Enzyme Activity (U/ml)`~pH+temp+RPM,hidden=c(4,2),linear.output= T,data = training)
pred_ann <- compute(ann_model,testing_df1)
predicted<- pred_ann$net.result*(max(DATA$`Enzyme Activity (U/ml)`)-min(DATA$`Enzyme Activity (U/ml)`))+min(DATA$`Enzyme Activity (U/ml)`)
predicted
pH <- c(7,6.7,5.8,7.97475)
temp <- c(35,38.2,32.2,31.515)
RPM <- c(70,80,50,178.485)
testing_df <-data.frame(pH,temp,RPM)
maxs1<- apply(testing_df,2,max)
mins1<- apply(testing_df,2,min)
testing_df1 <- as.data.frame(scale(testing_df,center = mins1,scale = (maxs1-mins1)))
ann_model <- neuralnet(`Enzyme Activity (U/ml)`~pH+temp+RPM,hidden=c(4,2),linear.output= T,data = training)
plot(ann_model)
predicted<- pred_ann$net.result*(max(DATA$`Enzyme Activity (U/ml)`)-min(DATA$`Enzyme Activity (U/ml)`))+min(DATA$`Enzyme Activity (U/ml)`)
predicted
pH <- c(7,6.7,5.8,7.97475)
temp <- c(35,38.2,32.2,31.515)
RPM <- c(70,80,50,178.485)
testing_df <-data.frame(pH,temp,RPM)
maxs1<- apply(testing_df,2,max)
mins1<- apply(testing_df,2,min)
testing_df1 <- as.data.frame(scale(testing_df,center = mins1,scale = (maxs1-mins1)))
ann_model <- neuralnet(`Enzyme Activity (U/ml)`~pH+temp+RPM,hidden=c(4,2),linear.output= T,data = training)
pred_ann <- compute(ann_model,testing_df1)
pred_ann1 <- compute(ann_model,testing[,-4])
plot(ann_model)
predicted<- pred_ann$net.result*(max(DATA$`Enzyme Activity (U/ml)`)-min(DATA$`Enzyme Activity (U/ml)`))+min(DATA$`Enzyme Activity (U/ml)`)
predicted
pH <- c(7,6.7,5.8,7.97475)
temp <- c(35,38.2,32.2,31.515)
RPM <- c(70,80,50,178.485)
testing_df <-data.frame(pH,temp,RPM)
maxs1<- apply(testing_df,2,max)
mins1<- apply(testing_df,2,min)
set.seed(3)
testing_df1 <- as.data.frame(scale(testing_df,center = mins1,scale = (maxs1-mins1)))
ann_model <- neuralnet(`Enzyme Activity (U/ml)`~pH+temp+RPM,hidden=c(4,2),linear.output= T,data = training)
plot(ann_model)
predicted<- pred_ann$net.result*(max(DATA$`Enzyme Activity (U/ml)`)-min(DATA$`Enzyme Activity (U/ml)`))+min(DATA$`Enzyme Activity (U/ml)`)
predicted
pH <- c(7,6.7,5.8,7.97475)
temp <- c(35,38.2,32.2,31.515)
RPM <- c(70,80,50,178.485)
testing_df <-data.frame(pH,temp,RPM)
maxs1<- apply(testing_df,2,max)
mins1<- apply(testing_df,2,min)
set.seed(10)
testing_df1 <- as.data.frame(scale(testing_df,center = mins1,scale = (maxs1-mins1)))
ann_model <- neuralnet(`Enzyme Activity (U/ml)`~pH+temp+RPM,hidden=c(4,2),linear.output= T,data = training)
pred_ann <- compute(ann_model,testing_df1)
plot(ann_model)
predicted<- pred_ann$net.result*(max(DATA$`Enzyme Activity (U/ml)`)-min(DATA$`Enzyme Activity (U/ml)`))+min(DATA$`Enzyme Activity (U/ml)`)
predicted
DATA <- read_excel("E:/DATA MINING/DATA.xlsx")
View(DATA)
lapply(DATA,max)
library(neuralnet)
library(readxl)
library(corrplot)
DATA <- read_excel("E:/DATA MINING/DATA.xlsx")
View(DATA)
DATA<- DATA[,5:8]
set.seed(3)
#scaling
maxs<- apply(DATA,2,max)
mins <- apply(DATA,2,min)
Data <- as.data.frame(scale(DATA,center = mins,scale = (maxs-mins)))
View(Data)
#partition
id <- sample(2,nrow(Data),prob=c(.7,.3),replace=T)
training <- Data[id==1,]
testing <- Data[id==2,]
#allvars <- colnames(data)
#prediction_vars <- paste(allvars[!allvars%in%"Enzyme Activity (U/ml)"],collapse = "+")
#form <- as.formula(paste("Enzyme Activity (U/ml)~",prediction_vars,collapse = "+"))
pH <- c(7,6.7,5.8,7.97475)
temp <- c(35,38.2,32.2,30)
RPM <- c(70,80,50,178.485)
testing_df <-data.frame(pH,temp,RPM)
maxs1<- apply(testing_df,2,max)
mins1<- apply(testing_df,2,min)
set.seed(10)
testing_df1 <- as.data.frame(scale(testing_df,center = mins1,scale = (maxs1-mins1)))
ann_model <- neuralnet(`Enzyme Activity (U/ml)`~pH+temp+RPM,hidden=c(4,2),linear.output= T,data = training)
pred_ann <- compute(ann_model,testing_df1)
pred_ann1 <- compute(ann_model,testing[,-4])
plot(ann_model)
#unscaling
predicted<- pred_ann$net.result*(max(DATA$`Enzyme Activity (U/ml)`)-min(DATA$`Enzyme Activity (U/ml)`))+min(DATA$`Enzyme Activity (U/ml)`)
predicted
actual <- testing$`Enzyme Activity (U/ml)`*(max(DATA$`Enzyme Activity (U/ml)`)-min(DATA$`Enzyme Activity (U/ml)`))+min(DATA$`Enzyme Activity (U/ml)`)
predicted1<- pred_ann1$net.result*(max(DATA$`Enzyme Activity (U/ml)`)-min(DATA$`Enzyme Activity (U/ml)`))+min(DATA$`Enzyme Activity (U/ml)`)
cor <-cor(DATA)
corrplot(corr = cor,method = "circle")
cor <-cor(DATA)
cor
pH <- c(7,6.7,5.8,7.97475)
temp <- c(35,38.2,32.2,31.515)
RPM <- c(70,80,50,178.485)
testing_df <-data.frame(pH,temp,RPM)
maxs1<- apply(testing_df,2,max)
mins1<- apply(testing_df,2,min)
set.seed(10)
testing_df1 <- as.data.frame(scale(testing_df,center = mins1,scale = (maxs1-mins1)))
ann_model <- neuralnet(`Enzyme Activity (U/ml)`~pH+temp+RPM,hidden=c(4,2),linear.output= T,data = training)
pred_ann <- compute(ann_model,testing_df1)
predicted<- pred_ann$net.result*(max(DATA$`Enzyme Activity (U/ml)`)-min(DATA$`Enzyme Activity (U/ml)`))+min(DATA$`Enzyme Activity (U/ml)`)
predicted
pH <- c(7,6.7,5.8,7.97475)
temp <- c(35,38.2,32.2,31.515)
RPM <- c(70,80,50,178.485)
testing_df <-data.frame(pH,temp,RPM)
maxs1<- apply(testing_df,2,max)
mins1<- apply(testing_df,2,min)
testing_df1 <- as.data.frame(scale(testing_df,center = mins1,scale = (maxs1-mins1)))
ann_model <- neuralnet(`Enzyme Activity (U/ml)`~pH+temp+RPM,hidden=c(4,2),linear.output= T,data = training)
pred_ann <- compute(ann_model,testing_df1)
predicted<- pred_ann$net.result*(max(DATA$`Enzyme Activity (U/ml)`)-min(DATA$`Enzyme Activity (U/ml)`))+min(DATA$`Enzyme Activity (U/ml)`)
predicted
corrplot(corr = cor,method = "circle")
ann_result <- data.frame(testing_df,predicted)
colnames(ann_result) <- c("pH","temp","RPM","Enzyme Activity (U/ml)")
View(ann_result)
write.csv(ann_result,"E:/DATA MINING/bhagwat.csv")
?kmeans
setwd("E:/DATA MINING/Big Sales Mart")
training_bsm <- read.csv("./Train.csv")
testing_bsm <- read.csv("./Test.csv")
nrow(training_bsm)
nrow(testing_bsm)
.25*nrow(testing_bsm)
sum(complete.cases(training_bsm))
sum(complete.cases(testing_bsm))
training_bsm
View(training_bsm)
str(training_bsm)
training_bsm$Item_Fat_Content
?xtabs
sum(table(complete.cases(training_bsm)))
table(sum(complete.cases(training_bsm)))
id1 <- which(training_bsm$Item_Fat_Content=="LF"|training_bsm$Item_Fat_Content=="low fat")
id1
id2 <- which(training_bsm$Item_Fat_Content=="reg")
training_bsm$Item_Fat_Content[id1,] <- "Low Fat"
training_bsm[id1,Item_Fat_Content] <- "Low Fat"
training_bsm[id1,"Item_Fat_Content"] <- "Low Fat"
training_bsm[id2,"Item_Fat_Content"] <- "Regular"
factor(training_bsm$Item_Fat_Content)
factor(testing_bsm$Item_Fat_Content)
id3 <- which(testing_bsm$Item_Fat_Content=="LF"|testing_bsm$Item_Fat_Content=="low fat")
id4 <- which(testing_bsm$Item_Fat_Content=="reg")
testing_bsm[id3,"Item_Fat_Content"] <- "Low Fat"
testing_bsm[id4,"Item_Fat_Content"] <- "Regular"
factor(testing_bsm$Item_Fat_Content)
training_bsm <- knn(training_bsm)
training_bsm <- kNN(training_bsm)
library(dplyr)
library(corrplot)
library(caret)
library(lattice)
library(ggplot2)
training_bsm <- kNN(training_bsm)
library(VIM)
training_bsm <- kNN(training_bsm)
training_bsm
colnames(training_bsm)
training_bsm <- training_bsm[,1:12]
testing_bsm <- kNN(testing_bsm)
testing_bsm <- testing_bsm[,1:12]
complete.cases(testing_bsm)
table(complete.cases(testing_bsm))
table(complete.cases(trainging_bsm))
table(complete.cases(training_bsm))
View(training_bsm)
View(training_bsm)
table(complete.cases(training_bsm$Outlet_Size))
str(training_bsm)
factor(training_bsm$Item_Type)
factor(training_bsm$Item_Size)
factor(training_bsm$Outlet_Size)
training_bsm <- read.csv("./Train.csv",na.strings =c("",NA))
View(training_bsm)
summary(training_bsm)
testing_bsm <- read.csv("./Test.csv",na.strings = c("",NA))
sum(complete.cases(testing_bsm))
id1 <- which(training_bsm$Item_Fat_Content=="LF"|training_bsm$Item_Fat_Content=="low fat")
id2 <- which(training_bsm$Item_Fat_Content=="reg")
training_bsm[id1,"Item_Fat_Content"] <- "Low Fat"
training_bsm[id2,"Item_Fat_Content"] <- "Regular"
id3 <- which(testing_bsm$Item_Fat_Content=="LF"|testing_bsm$Item_Fat_Content=="low fat")
id4 <- which(testing_bsm$Item_Fat_Content=="reg")
testing_bsm[id3,"Item_Fat_Content"] <- "Low Fat"
testing_bsm[id4,"Item_Fat_Content"] <- "Regular"
training_bsm <- kNN(training_bsm)
training_bsm <- training_bsm[,1:12]
summary(training_bsm)
summary(testing_bsm)
testing_bsm <- kNN(testing_bsm)
testing_bsm <- testing_bsm[,1:12]
summary(testing_bsm)
table(complete.cases(training_bsm))
table(complete.cases(training_bsm))=nrow(training_bsm)
table(complete.cases(testing_bsm))
nrow(testing_bsm)
nrow(training_bsm)
str(training_bsm)
hist(training_bsm$Item_Weight)
hist(training_bsm$Item_Visibility)
hist(training_bsm$Item_MRP)
hist(training_bsm$Item_Outlet_Sales)
fat_levels <- xtabs(~training_bsm$Item_Fat_Content)
fat_levels
xtabs(training_bsm$Item_Fat_Content+training_bsm$Item_Type)
xtabs(~training_bsm$Item_Fat_Content+training_bsm$Item_Type)
xtabs(~training_bsm$Item_Type+training_bsm$Item_Fat_Content)
str(training_bsm)
training_bsm <- read.csv("./Train.csv",na.strings =c("",NA))
testing_bsm <- read.csv("./Test.csv",na.strings = c("",NA))
id1 <- which(training_bsm$Item_Fat_Content=="LF"|training_bsm$Item_Fat_Content=="low fat")
id2 <- which(training_bsm$Item_Fat_Content=="reg")
training_bsm[id1,"Item_Fat_Content"] <- "Low Fat"
training_bsm[id2,"Item_Fat_Content"] <- "Regular"
id3 <- which(testing_bsm$Item_Fat_Content=="LF"|testing_bsm$Item_Fat_Content=="low fat")
id4 <- which(testing_bsm$Item_Fat_Content=="reg")
testing_bsm[id3,"Item_Fat_Content"] <- "Low Fat"
testing_bsm[id4,"Item_Fat_Content"] <- "Regular"
str(training_bsm)
training_bsm$Item_Fat_Content<-as.numeric(training_bsm$Item_Fat_Content)
training2 <- training_bsm
training2$Item_Fat_Content<-as.numeric(training2$Item_Fat_Content)
training2$Item_Fat_Content
training2$Outlet_Size <- as.numeric(training2$Outlet_Size)
training2$Outlet_Size
training_bsm <- kNN(training_bsm)
training_bsm <- training_bsm[,1:12]
testing_bsm <- kNN(testing_bsm)
testing_bsm <- testing_bsm[,1:12]
training_bsm <- read.csv("./Train.csv",na.strings =c("",NA))
testing_bsm <- read.csv("./Test.csv",na.strings = c("",NA))
sum(complete.cases(testing_bsm))
View(training_bsm)
str(training_bsm)
#for training data set
id1 <- which(training_bsm$Item_Fat_Content=="LF"|training_bsm$Item_Fat_Content=="low fat")
id2 <- which(training_bsm$Item_Fat_Content=="reg")
training_bsm[id1,"Item_Fat_Content"] <- "Low Fat"
training_bsm[id2,"Item_Fat_Content"] <- "Regular"
#for testing data set
id3 <- which(testing_bsm$Item_Fat_Content=="LF"|testing_bsm$Item_Fat_Content=="low fat")
id4 <- which(testing_bsm$Item_Fat_Content=="reg")
testing_bsm[id3,"Item_Fat_Content"] <- "Low Fat"
testing_bsm[id4,"Item_Fat_Content"] <- "Regular"
#for missing values knn imputation
training_bsm <- kNN(training_bsm)
training_bsm <- training_bsm[,1:12]
testing_bsm <- kNN(testing_bsm)
testing_bsm <- testing_bsm[,1:12]
View(training_bsm)
training2 <- training_bsm
training2$Item_Fat_Content<-as.numeric(training2$Item_Fat_Content)
training2$Outlet_Size <- as.numeric(training2$Outlet_Size)
str(training_bsm)
training2$Outlet_Location_Type <- as.numeric(training2$Outlet_Location_Type)
training2$Outlet_Type <- as.numeric(training2$Outlet_Type)
View(training2)
library(corrplot)
str(training2)
correlation <- cor(training2[,c(2,3,4,6,9,10,11,12)])
correlation
corrplot(correlation)
corrplot(correlation)
corrplot(correlation)
chi <- xtabs(~training_bsm$Item_Outlet_Sales+training_bsm$Item_Fat_Content)
chi
chi <- xtabs(~training_bsm$Item_Fat_Content+training_bsm$Item_Outlet_Sales)
chisq.test(chi)
?t.test
chi <- xtabs(~training2$Item_Fat_Content+training2$Item_Outlet_Sales)
chisq.test(chi)
t.test(training2$Item_Fat_Content,training2$Item_Outlet_Sales)
test1 <- xtabs(~training2$Item_Fat_Content+training2$Item_Outlet_Sales)
chisq.test(test1)
test1 <- xtabs(~training2$Item_Visibility+training2$Item_Outlet_Sales)
chisq.test(test1)
summary(training)
summary(training_bsm$Item_Fat_Content)
training_bsm$Item_Fat_Content<- as.factor(training_bsm$Item_Fat_Content)
summary(training_bsm$Item_Fat_Content)
training_bsm$Item_Fat_Content <- gsub("LF", "lowfat",training_bsm$Item_Fat_Content)
training_bsm$Item_Fat_Content <- gsub("low fat", "lowfat",training_bsm$Item_Fat_Content)
training_bsm$Item_Fat_Content <- gsub("Low Fat", "lowfat",training_bsm$Item_Fat_Content)
training_bsm$Item_Fat_Content <- gsub("reg", "Regular",training_bsm$Item_Fat_Content)
training_bsm$Item_Fat_Content <- as.factor(training_bsm$Item_Fat_Content)
summary(testing_bsm)
training_bsm$Item_Fat_Content <- as.factor(training_bsm$Item_Fat_Content)
summary(testing_bsm$Item_Fat_Content)
training_bsm$Item_Fat_Content <- gsub("LF", "lowfat",training_bsm$Item_Fat_Content)
training_bsm$Item_Fat_Content <- gsub("low fat", "lowfat",training_bsm$Item_Fat_Content)
training_bsm$Item_Fat_Content <- gsub("Low Fat", "lowfat",training_bsm$Item_Fat_Content)
training_bsm$Item_Fat_Content <- gsub("reg", "Regular",training_bsm$Item_Fat_Content)
training_bsm$Item_Fat_Content <- as.factor(training_bsm$Item_Fat_Content)
training_bsm <- kNN(training_bsm)
training_bsm$Item_Fat_Content
factor(training_bsm$Item_Fat_Content)
table(training_bsm$Item_Fat_Content)
training_bsm$Item_Fat_Content <- as.factor(training_bsm$Item_Fat_Content)
summary(testing_bsm)
summary(training_bsm)
testing_bsm$Item_Fat_Content <- gsub("LF", "lowfat",testing_bsm$Item_Fat_Content)
testing_bsm$Item_Fat_Content <- gsub("low fat", "lowfat",testing_bsm$Item_Fat_Content)
testing_bsm$Item_Fat_Content <- gsub("Low Fat", "lowfat",testing_bsm$Item_Fat_Content)
testing_bsm$Item_Fat_Content <- gsub("reg", "Regular",testing_bsm$Item_Fat_Content)
testing_bsm$Item_Fat_Content <- as.factor(testing_bsm$Item_Fat_Content)
training_bsm <- read.csv("./Train.csv",na.strings =c("",NA))
testing_bsm <- read.csv("./Test.csv",na.strings = c("",NA))
sum(complete.cases(testing_bsm))
training_bsm$Item_Fat_Content <- gsub("LF", "lowfat",training_bsm$Item_Fat_Content)
training_bsm$Item_Fat_Content <- gsub("low fat", "lowfat",training_bsm$Item_Fat_Content)
training_bsm$Item_Fat_Content <- gsub("Low Fat", "lowfat",training_bsm$Item_Fat_Content)
training_bsm$Item_Fat_Content <- gsub("reg", "Regular",training_bsm$Item_Fat_Content)
training_bsm$Item_Fat_Content <- as.factor(training_bsm$Item_Fat_Content)
testing_bsm$Item_Fat_Content <- gsub("LF", "lowfat",testing_bsm$Item_Fat_Content)
testing_bsm$Item_Fat_Content <- gsub("low fat", "lowfat",testing_bsm$Item_Fat_Content)
testing_bsm$Item_Fat_Content <- gsub("Low Fat", "lowfat",testing_bsm$Item_Fat_Content)
testing_bsm$Item_Fat_Content <- gsub("reg", "Regular",testing_bsm$Item_Fat_Content)
testing_bsm$Item_Fat_Content <- as.factor(testing_bsm$Item_Fat_Content)
training_bsm <- kNN(training_bsm)
training_bsm <- training_bsm[,1:12]
testing_bsm <- kNN(testing_bsm)
data <- training_bsm %>% filter(Item_Visibility!=0)
data
Data <- training_bsm %>% filter(Item_Visibility!=0)
visibility_model <- lm(Item_Visibility~Item_Weight + Item_Fat_Content +
Item_Type + Item_MRP +
Outlet_Establishment_Year + Outlet_Size +
Outlet_Location_Type + Item_Outlet_Sale,data=Data)
visibility_model <- lm(Item_Visibility~Item_Weight + Item_Fat_Content +
Item_Type + Item_MRP +
Outlet_Establishment_Year + Outlet_Size +
Outlet_Location_Type + Item_Outlet_Sales,data=Data)
visibility_model <- lm(Item_Visibility~Item_Weight + Item_Fat_Content +
Item_Type + Item_MRP +
Outlet_Establishment_Year + Outlet_Size +
Outlet_Location_Type + Item_Outlet_Sales,data=Data)
training_bsm$Item_Visibility[training_bsm$Item_Visibility==0] <- predict(visibility_model,newdata = training_bsm$Item_Visibility[training_bsm$Item_Visibility==0])
training_bsm$Item_Visibility[training_bsm$Item_Visibility==0] <- predict(visibility_model,newdata = training_bsm$Item_Visibility[training_bsm$Item_Visibility==0,])
training_bsm$Item_Visibility[training_bsm$Item_Visibility==0] <- predict(visibility_model,newdata = training_bsm[training_bsm$Item_Visibility==0,])
View(training_bsm)
View(testing_bsm)
training2 <- training_bsm
training2$Item_Fat_Content<-as.numeric(training2$Item_Fat_Content)
training2$Outlet_Location_Type <- as.numeric(training2$Outlet_Location_Type)
training2$Outlet_Size <- as.numeric(training2$Outlet_Size)
training2$Outlet_Type <- as.numeric(training2$Outlet_Type)
correlation <- cor(training2[,c(2,3,4,6,9,10,11,12)])
corrplot(correlation)
test1 <- xtabs(~training2$Item_Weight+training2$Item_Outlet_Sales)
chisq.test(test1)
test2 <- xtabs(~training2$Item_Fat_Content+training2$Item_Outlet_Sales)
chisq.test(test2)
id <- sample(2,nrow(testing_bsm),prob = c(0.8,.2),replace = T)
train <- training_bsm[id==1,]
test <- training_bsm[id==2,]
nrow(test)
nrow(train)
linear_reg <- lm(Item_Outlet_Sales~Item_Visibility+
Item_Type + Item_MRP +
Outlet_Establishment_Year + Outlet_Size +
Outlet_Location_Type,data=train)
pred <- predict(linear_reg,newdata = test)
error <- (pred-test$Item_Outlet_Sales)
error
error <- (pred-test$Item_Outlet_Sales)^2
error
error <- sum((pred-test$Item_Outlet_Sales)^2)
error
RMSE <- (error/nrow(test))^.5
RMSE
linear_reg <- lm(Item_Outlet_Sales~Item_Visibility+Item_Weight + Item_Fat_Content+
Item_Type + Item_MRP +
Outlet_Establishment_Year + Outlet_Size +
Outlet_Location_Type,data=train)
pred <- predict(linear_reg,newdata = test)
error <- sum((pred-test$Item_Outlet_Sales)^2)
RMSE <- (error/nrow(test))^.5
RMSE
linear_reg <- lm(Item_Outlet_Sales~Item_Visibility+Item_Weight + Item_Fat_Content+
Item_Type + Item_MRP + Outlet_Size +
Outlet_Location_Type,data=train)
pred <- predict(linear_reg,newdata = test)
error <- sum((pred-test$Item_Outlet_Sales)^2)
RMSE <- (error/nrow(test))^.5
RMSE
colnames(train)
linear_reg <- lm(Item_Outlet_Sales~Item_Visibility+Item_Weight + Item_Fat_Content+
Item_Type + Item_MRP +
Outlet_Establishment_Year + Outlet_Size +
Outlet_Location_Type+Outlet_Type,data=train)
pred <- predict(linear_reg,newdata = test)
error <- sum((pred-test$Item_Outlet_Sales)^2)
RMSE <- (error/nrow(test))^.5
RMSE
library(randomForest)
random_forest <- randomForest(Item_Outlet_Sales~Item_Visibility+Item_Weight + Item_Fat_Content+
Item_Type + Item_MRP +
Outlet_Establishment_Year + Outlet_Size +
Outlet_Location_Type+Outlet_Type,data=train)
pred2 <- predict(random_forest,newdata = test)
error2 <- sum((pred2-test$Item_Outlet_Sales)^2)
RMSE2 <- (error/nrow(test))^.5
RMSE2
linear_reg <- lm(Item_Outlet_Sales~Item_Visibility+Item_Weight + Item_Fat_Content+
Item_Type + Item_MRP +
Outlet_Establishment_Year + Outlet_Size +
Outlet_Location_Type+Outlet_Type,data=train)
pred1 <- predict(linear_reg,newdata = test)
error1 <- sum((pred1-test$Item_Outlet_Sales)^2)
RMSE1 <- (error/nrow(test))^.5
RMSE1
random_forest <- randomForest(Item_Outlet_Sales~Item_Visibility+Item_Weight + Item_Fat_Content+
Item_Type + Item_MRP +
Outlet_Establishment_Year + Outlet_Size +
Outlet_Location_Type+Outlet_Type,data=train)
pred2 <- predict(random_forest,newdata = test)
error2 <- sum((pred2-test$Item_Outlet_Sales)^2)
RMSE2 <- (error/nrow(test))^.5
RMSE2
Data2 <- testing_bsm %>% filter(Item_Visibility!=0)
visibility_model2 <- lm(Item_Visibility~Item_Weight + Item_Fat_Content +
Item_Type + Item_MRP +
Outlet_Establishment_Year + Outlet_Size +
Outlet_Location_Type + Item_Outlet_Sales,data=Data)
testing_bsm$Item_Visibility[testing_bsm$Item_Visibility==0] <- predict(visibility_model2,newdata = testing_bsm[testing_bsm$Item_Visibility==0,])
visibility_model2 <- lm(Item_Visibility~Item_Weight + Item_Fat_Content +
Item_Type + Item_MRP +
Outlet_Establishment_Year + Outlet_Size +
Outlet_Location_Type,data=Data)
testing_bsm$Item_Visibility[testing_bsm$Item_Visibility==0] <- predict(visibility_model2,newdata = testing_bsm[testing_bsm$Item_Visibility==0,])
random_forest <- randomForest(Item_Outlet_Sales~Item_Visibility+
Item_Type + Item_MRP +
Outlet_Size +
Outlet_Location_Type+Outlet_Type,data=train)
pred2 <- predict(random_forest,newdata = test)
error2 <- sum((pred2-test$Item_Outlet_Sales)^2)
RMSE2 <- (error/nrow(test))^.5
RMSE2
linear_reg <- lm(Item_Outlet_Sales~Item_Visibility+
Item_Type + Item_MRP +
Outlet_Size +
Outlet_Location_Type+Outlet_Type,data=train)
pred1 <- predict(linear_reg,newdata = test)
error1 <- sum((pred1-test$Item_Outlet_Sales)^2)
RMSE1 <- (error/nrow(test))^.5
RMSE1
predict_lm <- predict(linear_reg,testing_bsm)
predict_lm
getwd()
write.csv(predict_lm,"./result_bsm")
write.csv(predict_lm,"./result_bsm.csv")
write.csv(c(Item_Identifier,predict_lm),"./result_bsm.csv")
write.csv(c(testing_bsm$Item_Identifier,predict_lm),"./result_bsm.csv")
result <- as.data.frame(testing_bsm$Item_Identifier,predict_lm)
result <- as.data.frame(predict_lm)
result
result <- as.data.frame(c(testing_bsm$Item_Identifier,predict_lm)
result <- as.data.frame(c(testing_bsm$Item_Identifier,predict_lm))
result <- as.data.frame(c(testing_bsm$Item_Identifier,predict_lm))
view(result)
View(result)
result <- as.data.frame(testing_bsm$Item_Identifier,predict_lm)
result <-data.frame(testing_bsm$Item_Identifier,testing_bsm$Outlet_Identifier,predict_lm)
View(result)
write.csv(result,"./result_bsm.csv")
colnames(train)
colnames(result) <- c("Item_Identifier","Outlet_Identifier","Item_Outlet_Sales")
View(result)
write.csv(result,"./result_bsm.csv")
write.csv(result,"./result_bsm.csv")
write.csv(result,"./result_bsm2.csv")
linear_reg <- lm(Item_Outlet_Sales~Item_Visibility+Item_Weight + Item_Fat_Content+
Item_Type + Item_MRP +
Outlet_Establishment_Year + Outlet_Size +
Outlet_Location_Type+Outlet_Type,data=training_bsm)
pred1 <- predict(linear_reg,newdata = test)
predict_lm <- predict(linear_reg,testing_bsm)
result <-data.frame(testing_bsm$Item_Identifier,testing_bsm$Outlet_Identifier,predict_lm)
colnames(result) <- c("Item_Identifier","Outlet_Identifier","Item_Outlet_Sales")
write.csv(result,"./result_bsm2.csv")
random_forest <- randomForest(Item_Outlet_Sales~Item_Visibility+Item_Weight + Item_Fat_Content+
Item_Type + Item_MRP +
Outlet_Establishment_Year + Outlet_Size +
Outlet_Location_Type+Outlet_Type,data=training_bsm)
predict_rf <- predict(random_forest,testing_bsm)
result2 <-data.frame(testing_bsm$Item_Identifier,testing_bsm$Outlet_Identifier,predict_lm)
colnames(result2) <- c("Item_Identifier","Outlet_Identifier","Item_Outlet_Sales")
result2 <-data.frame(testing_bsm$Item_Identifier,testing_bsm$Outlet_Identifier,predict_rf)
colnames(result2) <- c("Item_Identifier","Outlet_Identifier","Item_Outlet_Sales")
write.csv(result2,"./result_rf.csv")
hist(training_bsm$Item_Weight)
hist(training_bsm$Item_Visibility)
table(training_bsm$Item_Visibility==0)
shiny::runApp('E:/ShinyDashboard/twitter_analysis')
runApp('E:/DATA MINING/ShinyDashboard/twitter_analysis')
runApp('E:/DATA MINING/ShinyDashboard/twitter_analysis')
runApp('E:/DATA MINING/ShinyDashboard/twitter_analysis')
